apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "com.sentaroh.android.SMBSync2"
        minSdkVersion 21
//        targetSdkVersion 21  //Android 5.0
//        targetSdkVersion 23  //Android 6.0
        targetSdkVersion 29

//
        versionCode 276
        versionName "2.45"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("debug")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def date = new java.text.SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())
                        def mod_name = "${rootProject.name}"
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
                        def newName = "${mod_name}_debug.${fileExtension}"
//                        outputFileName = "../../../../../release/"+newName
                        outputFileName = newName

                        task copyDebugApk1(type: Copy) {
                            from 'build/outputs/apk/debug'
//                            into '../debug_apk/' // Into the project root, one level above the app folder
                            into '../release/' // Into the project root, one level above the app folder
                            include '**/*.apk'
                        }

                        afterEvaluate {
                            packageDebug.finalizedBy(copyDebugApk1)
                        }
                    }
                }
            }

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                if (variant.buildType.name.equals("release")) {
                    variant.outputs.all {
                        def versionName = variant.versionName
                        def versionNumber = variant.versionCode.toString()
                        def date = new java.text.SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())
                        def mod_name = "${rootProject.name}"
                        def fileExtension= outputFileName.toString().substring(outputFileName.toString().lastIndexOf(".")+1)
                        def newName = "${mod_name}_${versionName}_${versionNumber}_release.${fileExtension}"
                        outputFileName = newName
                    }
                }
            }

        }
    }
}

dependencies {
    implementation files('libs/jcifs-ng-2.1.0-mod-08.jar')
    implementation files('libs/jcifs-ng-2.1.1-20190202-03.jar')
//    implementation files('libs/jcifs-ng-2.1.3-20190427-03.jar')
    implementation files('libs/jcifs-ng-2.1.3-20190427-05.jar')
    implementation files('libs/jcifs-ng-2.1.4-20200413-02.jar')
    implementation files('libs/jcifs-1.3.17_patch.jar')
//    implementation files('libs/JcifsFile-1.0.6.jar')
    implementation files('libs/JcifsFile-1.0.9.jar')
//    implementation files('libs/slf4j-api-1.7.7.jar')
    implementation files('libs/bcprov-jdk15on-158.jar')
//    implementation files('libs/WrapperForSlf4j-1.0.2.jar')

    implementation files('libs/Utilities-1.0.17.aar')

    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:preference-v7:28.0.0'

    implementation 'com.android.support:design:28.0.0'

    implementation files('libs/metadata-extractor-2.11.0.jar')
//    implementation files('libs/xmpcore-5.1.3.jar')

}
